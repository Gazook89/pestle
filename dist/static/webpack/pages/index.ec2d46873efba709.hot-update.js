/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@melloware/coloris/dist/coloris.css":
/*!****************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@melloware/coloris/dist/coloris.css ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".clr-picker {\\r\\n  display: none;\\r\\n  flex-wrap: wrap;\\r\\n  position: absolute;\\r\\n  width: 200px;\\r\\n  z-index: 1000;\\r\\n  border-radius: 10px;\\r\\n  background-color: #fff;\\r\\n  justify-content: flex-end;\\r\\n  direction: ltr;\\r\\n  box-shadow: 0 0 5px rgba(0,0,0,.05), 0 5px 20px rgba(0,0,0,.1);\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  user-select: none;\\r\\n}\\r\\n\\r\\n.clr-picker.clr-open,\\r\\n.clr-picker[data-inline=\\\"true\\\"] {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.clr-picker[data-inline=\\\"true\\\"] {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.clr-gradient {\\r\\n  position: relative;\\r\\n  width: 100%;\\r\\n  height: 100px;\\r\\n  margin-bottom: 15px;\\r\\n  border-radius: 3px 3px 0 0;\\r\\n  background-image: linear-gradient(rgba(0,0,0,0), #000), linear-gradient(90deg, #fff, currentColor);\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-marker {\\r\\n  position: absolute;\\r\\n  width: 12px;\\r\\n  height: 12px;\\r\\n  margin: -6px 0 0 -6px;\\r\\n  border: 1px solid #fff;\\r\\n  border-radius: 50%;\\r\\n  background-color: currentColor;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-picker input[type=\\\"range\\\"]::-webkit-slider-runnable-track {\\r\\n  width: 100%;\\r\\n  height: 16px;\\r\\n}\\r\\n\\r\\n.clr-picker input[type=\\\"range\\\"]::-webkit-slider-thumb {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  -webkit-appearance: none;\\r\\n}\\r\\n\\r\\n.clr-picker input[type=\\\"range\\\"]::-moz-range-track {\\r\\n  width: 100%;\\r\\n  height: 16px;\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n.clr-picker input[type=\\\"range\\\"]::-moz-range-thumb {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n.clr-hue {\\r\\n  background-image: linear-gradient(to right, #f00 0%, #ff0 16.66%, #0f0 33.33%, #0ff 50%, #00f 66.66%, #f0f 83.33%, #f00 100%);\\r\\n}\\r\\n\\r\\n.clr-hue,\\r\\n.clr-alpha {\\r\\n  position: relative;\\r\\n  width: calc(100% - 40px);\\r\\n  height: 8px;\\r\\n  margin: 5px 20px;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.clr-alpha span {\\r\\n  display: block;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  border-radius: inherit;\\r\\n  background-image: linear-gradient(90deg, rgba(0,0,0,0), currentColor);\\r\\n}\\r\\n\\r\\n.clr-hue input[type=\\\"range\\\"],\\r\\n.clr-alpha input[type=\\\"range\\\"] {\\r\\n  position: absolute;\\r\\n  width: calc(100% + 32px);\\r\\n  height: 16px;\\r\\n  left: -16px;\\r\\n  top: -4px;\\r\\n  margin: 0;\\r\\n  background-color: transparent;\\r\\n  opacity: 0;\\r\\n  cursor: pointer;\\r\\n  -moz-appearance: none;\\r\\n       appearance: none;\\r\\n  -webkit-appearance: none;\\r\\n}\\r\\n\\r\\n.clr-hue div,\\r\\n.clr-alpha div {\\r\\n  position: absolute;\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  left: 0;\\r\\n  top: 50%;\\r\\n  margin-left: -8px;\\r\\n  transform: translateY(-50%);\\r\\n  border: 2px solid #fff;\\r\\n  border-radius: 50%;\\r\\n  background-color: currentColor;\\r\\n  box-shadow: 0 0 1px #888;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.clr-alpha div:before {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  border-radius: 50%;\\r\\n  background-color: currentColor;\\r\\n}\\r\\n\\r\\n.clr-format {\\r\\n  display: none;\\r\\n  order: 1;\\r\\n  width: calc(100% - 40px);\\r\\n  margin: 0 20px 20px;\\r\\n}\\r\\n\\r\\n.clr-segmented {\\r\\n  display: flex;\\r\\n  position: relative;\\r\\n  width: 100%;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 1px solid #ddd;\\r\\n  border-radius: 15px;\\r\\n  box-sizing: border-box;\\r\\n  color: #999;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.clr-segmented input,\\r\\n.clr-segmented legend {\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  opacity: 0;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.clr-segmented label {\\r\\n  flex-grow: 1;\\r\\n  margin: 0;\\r\\n  padding: 4px 0;\\r\\n  font-size: inherit;\\r\\n  font-weight: normal;\\r\\n  line-height: initial;\\r\\n  text-align: center;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-segmented label:first-of-type {\\r\\n  border-radius: 10px 0 0 10px;\\r\\n}\\r\\n\\r\\n.clr-segmented label:last-of-type {\\r\\n  border-radius: 0 10px 10px 0;\\r\\n}\\r\\n\\r\\n.clr-segmented input:checked + label {\\r\\n  color: #fff;\\r\\n  background-color: #666;\\r\\n}\\r\\n\\r\\n.clr-swatches {\\r\\n  order: 2;\\r\\n  width: calc(100% - 32px);\\r\\n  margin: 0 16px;\\r\\n}\\r\\n\\r\\n.clr-swatches div {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  padding-bottom: 12px;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.clr-swatches button {\\r\\n  position: relative;\\r\\n  width: 20px;\\r\\n  height: 20px;\\r\\n  margin: 0 4px 6px 4px;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  border-radius: 50%;\\r\\n  color: inherit;\\r\\n  text-indent: -1000px;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-swatches button:after {\\r\\n  content: '';\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  border-radius: inherit;\\r\\n  background-color: currentColor;\\r\\n  box-shadow: inset 0 0 0 1px rgba(0,0,0,.1);\\r\\n}\\r\\n\\r\\ninput.clr-color {\\r\\n  order: 1;\\r\\n  width: calc(100% - 80px);\\r\\n  height: 32px;\\r\\n  margin: 15px 20px 20px auto;\\r\\n  padding: 0 10px;\\r\\n  border: 1px solid #ddd;\\r\\n  border-radius: 16px;\\r\\n  color: #444;\\r\\n  background-color: #fff;\\r\\n  font-family: sans-serif;\\r\\n  font-size: 14px;\\r\\n  text-align: center;\\r\\n  box-shadow: none;\\r\\n}\\r\\n\\r\\ninput.clr-color:focus {\\r\\n  outline: none;\\r\\n  border: 1px solid #1e90ff;\\r\\n}\\r\\n\\r\\n.clr-close,\\r\\n.clr-clear {\\r\\n  display: none;\\r\\n  order: 2;\\r\\n  height: 24px;\\r\\n  margin: 0 20px 20px;\\r\\n  padding: 0 20px;\\r\\n  border: 0;\\r\\n  border-radius: 12px;\\r\\n  color: #fff;\\r\\n  background-color: #666;\\r\\n  font-family: inherit;\\r\\n  font-size: 12px;\\r\\n  font-weight: 400;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-close {\\r\\n  display: block;\\r\\n  margin: 0 20px 20px auto;\\r\\n}\\r\\n\\r\\n.clr-preview {\\r\\n  position: relative;\\r\\n  width: 32px;\\r\\n  height: 32px;\\r\\n  margin: 15px 0 20px 20px;\\r\\n  border-radius: 50%;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.clr-preview:before,\\r\\n.clr-preview:after {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  border: 1px solid #fff;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n.clr-preview:after {\\r\\n  border: 0;\\r\\n  background-color: currentColor;\\r\\n  box-shadow: inset 0 0 0 1px rgba(0,0,0,.1);\\r\\n}\\r\\n\\r\\n.clr-preview button {\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  z-index: 1;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  border-radius: 50%;\\r\\n  outline-offset: -2px;\\r\\n  background-color: transparent;\\r\\n  text-indent: -9999px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.clr-marker,\\r\\n.clr-hue div,\\r\\n.clr-alpha div,\\r\\n.clr-color {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.clr-field {\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n.clr-field input {\\r\\n  margin: 0;\\r\\n  direction: ltr;\\r\\n}\\r\\n\\r\\n.clr-field.clr-rtl input {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.clr-field button {\\r\\n  position: absolute;\\r\\n  width: 30px;\\r\\n  height: 100%;\\r\\n  right: 0;\\r\\n  top: 50%;\\r\\n  transform: translateY(-50%);\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  color: inherit;\\r\\n  text-indent: -1000px;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.clr-field.clr-rtl button {\\r\\n  right: auto;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n.clr-field button:after {\\r\\n  content: '';\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  border-radius: inherit;\\r\\n  background-color: currentColor;\\r\\n  box-shadow: inset 0 0 1px rgba(0,0,0,.5);\\r\\n}\\r\\n\\r\\n.clr-alpha,\\r\\n.clr-alpha div,\\r\\n.clr-swatches button,\\r\\n.clr-preview:before,\\r\\n.clr-field button {\\r\\n  background-image: repeating-linear-gradient(45deg, #aaa 25%, transparent 25%, transparent 75%, #aaa 75%, #aaa), repeating-linear-gradient(45deg, #aaa 25%, #fff 25%, #fff 75%, #aaa 75%, #aaa);\\r\\n  background-position: 0 0, 4px 4px;\\r\\n  background-size: 8px 8px;\\r\\n}\\r\\n\\r\\n.clr-marker:focus {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.clr-keyboard-nav .clr-marker:focus,\\r\\n.clr-keyboard-nav .clr-hue input:focus + div,\\r\\n.clr-keyboard-nav .clr-alpha input:focus + div,\\r\\n.clr-keyboard-nav .clr-segmented input:focus + label {\\r\\n  outline: none;\\r\\n  box-shadow: 0 0 0 2px #1e90ff, 0 0 2px 2px #fff;\\r\\n}\\r\\n\\r\\n.clr-picker[data-alpha=\\\"false\\\"] .clr-alpha {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.clr-picker[data-minimal=\\\"true\\\"] {\\r\\n  padding-top: 16px;\\r\\n}\\r\\n\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-gradient,\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-hue,\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-alpha,\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-color,\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-preview {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n/** Dark theme **/\\r\\n\\r\\n.clr-dark {\\r\\n  background-color: #444;\\r\\n}\\r\\n\\r\\n.clr-dark .clr-segmented {\\r\\n  border-color: #777;\\r\\n}\\r\\n\\r\\n.clr-dark .clr-swatches button:after {\\r\\n  box-shadow: inset 0 0 0 1px rgba(255,255,255,.3);\\r\\n}\\r\\n\\r\\n.clr-dark input.clr-color {\\r\\n  color: #fff;\\r\\n  border-color: #777;\\r\\n  background-color: #555;\\r\\n}\\r\\n\\r\\n.clr-dark input.clr-color:focus {\\r\\n  border-color: #1e90ff;\\r\\n}\\r\\n\\r\\n.clr-dark .clr-preview:after {\\r\\n  box-shadow: inset 0 0 0 1px rgba(255,255,255,.5);\\r\\n}\\r\\n\\r\\n.clr-dark .clr-alpha,\\r\\n.clr-dark .clr-alpha div,\\r\\n.clr-dark .clr-swatches button,\\r\\n.clr-dark .clr-preview:before {\\r\\n  background-image: repeating-linear-gradient(45deg, #666 25%, transparent 25%, transparent 75%, #888 75%, #888), repeating-linear-gradient(45deg, #888 25%, #444 25%, #444 75%, #888 75%, #888);\\r\\n}\\r\\n\\r\\n/** Polaroid theme **/\\r\\n\\r\\n.clr-picker.clr-polaroid {\\r\\n  border-radius: 6px;\\r\\n  box-shadow: 0 0 5px rgba(0,0,0,.1), 0 5px 30px rgba(0,0,0,.2);\\r\\n}\\r\\n\\r\\n.clr-picker.clr-polaroid:before {\\r\\n  content: '';\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  width: 16px;\\r\\n  height: 10px;\\r\\n  left: 20px;\\r\\n  top: -10px;\\r\\n  border: solid transparent;\\r\\n  border-width: 0 8px 10px 8px;\\r\\n  border-bottom-color: currentColor;\\r\\n  box-sizing: border-box;\\r\\n  color: #fff;\\r\\n  filter: drop-shadow(0 -4px 3px rgba(0,0,0,.1));\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.clr-picker.clr-polaroid.clr-dark:before {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.clr-picker.clr-polaroid.clr-left:before {\\r\\n  left: auto;\\r\\n  right: 20px;\\r\\n}\\r\\n\\r\\n.clr-picker.clr-polaroid.clr-top:before {\\r\\n  top: auto;\\r\\n  bottom: -10px;\\r\\n  transform: rotateZ(180deg);\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-gradient {\\r\\n  width: calc(100% - 20px);\\r\\n  height: 120px;\\r\\n  margin: 10px;\\r\\n  border-radius: 3px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-hue,\\r\\n.clr-polaroid .clr-alpha {\\r\\n  width: calc(100% - 30px);\\r\\n  height: 10px;\\r\\n  margin: 6px 15px;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-hue div,\\r\\n.clr-polaroid .clr-alpha div {\\r\\n  box-shadow: 0 0 5px rgba(0,0,0,.2);\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-format {\\r\\n  width: calc(100% - 20px);\\r\\n  margin: 0 10px 15px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-swatches {\\r\\n  width: calc(100% - 12px);\\r\\n  margin: 0 6px;\\r\\n}\\r\\n.clr-polaroid .clr-swatches div {\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-swatches button {\\r\\n  width: 22px;\\r\\n  height: 22px;\\r\\n}\\r\\n\\r\\n.clr-polaroid input.clr-color {\\r\\n  width: calc(100% - 60px);\\r\\n  margin: 10px 10px 15px auto;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-clear {\\r\\n  margin: 0 10px 15px 10px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-close {\\r\\n  margin: 0 10px 15px auto;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-preview {\\r\\n  margin: 10px 0 15px 10px;\\r\\n}\\r\\n\\r\\n/** Large theme **/\\r\\n\\r\\n.clr-picker.clr-large {\\r\\n  width: 275px;\\r\\n}\\r\\n\\r\\n.clr-large .clr-gradient {\\r\\n  height: 150px;\\r\\n}\\r\\n\\r\\n.clr-large .clr-swatches button {\\r\\n  width: 22px;\\r\\n  height: 22px;\\r\\n}\\r\\n\\r\\n/** Pill (horizontal) theme **/\\r\\n\\r\\n.clr-picker.clr-pill {\\r\\n  width: 380px;\\r\\n  padding-left: 180px;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.clr-pill .clr-gradient {\\r\\n  position: absolute;\\r\\n  width: 180px;\\r\\n  height: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  margin-bottom: 0;\\r\\n  border-radius: 3px 0 0 3px;\\r\\n}\\r\\n\\r\\n.clr-pill .clr-hue {\\r\\n  margin-top: 20px;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://node_modules/@melloware/coloris/dist/coloris.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,eAAe;EACf,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,sBAAsB;EACtB,yBAAyB;EACzB,cAAc;EACd,8DAA8D;EAC9D,sBAAsB;EACtB,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;;EAEE,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,0BAA0B;EAC1B,kGAAkG;EAClG,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,sBAAsB;EACtB,kBAAkB;EAClB,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,6HAA6H;AAC/H;;AAEA;;EAEE,kBAAkB;EAClB,wBAAwB;EACxB,WAAW;EACX,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,WAAW;EACX,sBAAsB;EACtB,qEAAqE;AACvE;;AAEA;;EAEE,kBAAkB;EAClB,wBAAwB;EACxB,YAAY;EACZ,WAAW;EACX,SAAS;EACT,SAAS;EACT,6BAA6B;EAC7B,UAAU;EACV,eAAe;EACf,qBAAgB;OAAhB,gBAAgB;EAChB,wBAAwB;AAC1B;;AAEA;;EAEE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,OAAO;EACP,QAAQ;EACR,iBAAiB;EACjB,2BAA2B;EAC3B,sBAAsB;EACtB,kBAAkB;EAClB,8BAA8B;EAC9B,wBAAwB;EACxB,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,OAAO;EACP,MAAM;EACN,kBAAkB;EAClB,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,wBAAwB;EACxB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,mBAAmB;EACnB,sBAAsB;EACtB,WAAW;EACX,eAAe;AACjB;;AAEA;;EAEE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,SAAS;EACT,UAAU;EACV,SAAS;EACT,OAAO;EACP,MAAM;EACN,UAAU;EACV,oBAAoB;AACtB;;AAEA;EACE,YAAY;EACZ,SAAS;EACT,cAAc;EACd,kBAAkB;EAClB,mBAAmB;EACnB,oBAAoB;EACpB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,QAAQ;EACR,wBAAwB;EACxB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,oBAAoB;EACpB,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,UAAU;EACV,SAAS;EACT,kBAAkB;EAClB,cAAc;EACd,oBAAoB;EACpB,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,cAAc;EACd,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,OAAO;EACP,MAAM;EACN,sBAAsB;EACtB,8BAA8B;EAC9B,0CAA0C;AAC5C;;AAEA;EACE,QAAQ;EACR,wBAAwB;EACxB,YAAY;EACZ,2BAA2B;EAC3B,eAAe;EACf,sBAAsB;EACtB,mBAAmB;EACnB,WAAW;EACX,sBAAsB;EACtB,uBAAuB;EACvB,eAAe;EACf,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,yBAAyB;AAC3B;;AAEA;;EAEE,aAAa;EACb,QAAQ;EACR,YAAY;EACZ,mBAAmB;EACnB,eAAe;EACf,SAAS;EACT,mBAAmB;EACnB,WAAW;EACX,sBAAsB;EACtB,oBAAoB;EACpB,eAAe;EACf,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,wBAAwB;EACxB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;;EAEE,WAAW;EACX,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,OAAO;EACP,MAAM;EACN,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,SAAS;EACT,8BAA8B;EAC9B,0CAA0C;AAC5C;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,UAAU;EACV,SAAS;EACT,UAAU;EACV,SAAS;EACT,kBAAkB;EAClB,oBAAoB;EACpB,6BAA6B;EAC7B,oBAAoB;EACpB,eAAe;EACf,gBAAgB;AAClB;;AAEA;;;;EAIE,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,SAAS;EACT,cAAc;AAChB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,QAAQ;EACR,QAAQ;EACR,2BAA2B;EAC3B,SAAS;EACT,UAAU;EACV,SAAS;EACT,cAAc;EACd,oBAAoB;EACpB,mBAAmB;EACnB,gBAAgB;EAChB,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,OAAO;AACT;;AAEA;EACE,WAAW;EACX,cAAc;EACd,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,OAAO;EACP,MAAM;EACN,sBAAsB;EACtB,8BAA8B;EAC9B,wCAAwC;AAC1C;;AAEA;;;;;EAKE,8LAA8L;EAC9L,iCAAiC;EACjC,wBAAwB;AAC1B;;AAEA;EACE,aAAa;AACf;;AAEA;;;;EAIE,aAAa;EACb,+CAA+C;AACjD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;AACnB;;AAEA;;;;;EAKE,aAAa;AACf;;AAEA,iBAAiB;;AAEjB;EACE,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,gDAAgD;AAClD;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,gDAAgD;AAClD;;AAEA;;;;EAIE,8LAA8L;AAChM;;AAEA,qBAAqB;;AAErB;EACE,kBAAkB;EAClB,6DAA6D;AAC/D;;AAEA;EACE,WAAW;EACX,cAAc;EACd,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,UAAU;EACV,UAAU;EACV,yBAAyB;EACzB,4BAA4B;EAC5B,iCAAiC;EACjC,sBAAsB;EACtB,WAAW;EACX,8CAA8C;EAC9C,oBAAoB;AACtB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,UAAU;EACV,WAAW;AACb;;AAEA;EACE,SAAS;EACT,aAAa;EACb,0BAA0B;AAC5B;;AAEA;EACE,wBAAwB;EACxB,aAAa;EACb,YAAY;EACZ,kBAAkB;AACpB;;AAEA;;EAEE,wBAAwB;EACxB,YAAY;EACZ,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;;EAEE,kCAAkC;AACpC;;AAEA;EACE,wBAAwB;EACxB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;EACxB,aAAa;AACf;AACA;EACE,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,wBAAwB;EACxB,2BAA2B;AAC7B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA,kBAAkB;;AAElB;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA,8BAA8B;;AAE9B;EACE,YAAY;EACZ,mBAAmB;EACnB,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,YAAY;EACZ,OAAO;EACP,MAAM;EACN,gBAAgB;EAChB,0BAA0B;AAC5B;;AAEA;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\".clr-picker {\\r\\n  display: none;\\r\\n  flex-wrap: wrap;\\r\\n  position: absolute;\\r\\n  width: 200px;\\r\\n  z-index: 1000;\\r\\n  border-radius: 10px;\\r\\n  background-color: #fff;\\r\\n  justify-content: flex-end;\\r\\n  direction: ltr;\\r\\n  box-shadow: 0 0 5px rgba(0,0,0,.05), 0 5px 20px rgba(0,0,0,.1);\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  user-select: none;\\r\\n}\\r\\n\\r\\n.clr-picker.clr-open,\\r\\n.clr-picker[data-inline=\\\"true\\\"] {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.clr-picker[data-inline=\\\"true\\\"] {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.clr-gradient {\\r\\n  position: relative;\\r\\n  width: 100%;\\r\\n  height: 100px;\\r\\n  margin-bottom: 15px;\\r\\n  border-radius: 3px 3px 0 0;\\r\\n  background-image: linear-gradient(rgba(0,0,0,0), #000), linear-gradient(90deg, #fff, currentColor);\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-marker {\\r\\n  position: absolute;\\r\\n  width: 12px;\\r\\n  height: 12px;\\r\\n  margin: -6px 0 0 -6px;\\r\\n  border: 1px solid #fff;\\r\\n  border-radius: 50%;\\r\\n  background-color: currentColor;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-picker input[type=\\\"range\\\"]::-webkit-slider-runnable-track {\\r\\n  width: 100%;\\r\\n  height: 16px;\\r\\n}\\r\\n\\r\\n.clr-picker input[type=\\\"range\\\"]::-webkit-slider-thumb {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  -webkit-appearance: none;\\r\\n}\\r\\n\\r\\n.clr-picker input[type=\\\"range\\\"]::-moz-range-track {\\r\\n  width: 100%;\\r\\n  height: 16px;\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n.clr-picker input[type=\\\"range\\\"]::-moz-range-thumb {\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n.clr-hue {\\r\\n  background-image: linear-gradient(to right, #f00 0%, #ff0 16.66%, #0f0 33.33%, #0ff 50%, #00f 66.66%, #f0f 83.33%, #f00 100%);\\r\\n}\\r\\n\\r\\n.clr-hue,\\r\\n.clr-alpha {\\r\\n  position: relative;\\r\\n  width: calc(100% - 40px);\\r\\n  height: 8px;\\r\\n  margin: 5px 20px;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.clr-alpha span {\\r\\n  display: block;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  border-radius: inherit;\\r\\n  background-image: linear-gradient(90deg, rgba(0,0,0,0), currentColor);\\r\\n}\\r\\n\\r\\n.clr-hue input[type=\\\"range\\\"],\\r\\n.clr-alpha input[type=\\\"range\\\"] {\\r\\n  position: absolute;\\r\\n  width: calc(100% + 32px);\\r\\n  height: 16px;\\r\\n  left: -16px;\\r\\n  top: -4px;\\r\\n  margin: 0;\\r\\n  background-color: transparent;\\r\\n  opacity: 0;\\r\\n  cursor: pointer;\\r\\n  appearance: none;\\r\\n  -webkit-appearance: none;\\r\\n}\\r\\n\\r\\n.clr-hue div,\\r\\n.clr-alpha div {\\r\\n  position: absolute;\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  left: 0;\\r\\n  top: 50%;\\r\\n  margin-left: -8px;\\r\\n  transform: translateY(-50%);\\r\\n  border: 2px solid #fff;\\r\\n  border-radius: 50%;\\r\\n  background-color: currentColor;\\r\\n  box-shadow: 0 0 1px #888;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.clr-alpha div:before {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  border-radius: 50%;\\r\\n  background-color: currentColor;\\r\\n}\\r\\n\\r\\n.clr-format {\\r\\n  display: none;\\r\\n  order: 1;\\r\\n  width: calc(100% - 40px);\\r\\n  margin: 0 20px 20px;\\r\\n}\\r\\n\\r\\n.clr-segmented {\\r\\n  display: flex;\\r\\n  position: relative;\\r\\n  width: 100%;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 1px solid #ddd;\\r\\n  border-radius: 15px;\\r\\n  box-sizing: border-box;\\r\\n  color: #999;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.clr-segmented input,\\r\\n.clr-segmented legend {\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  opacity: 0;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.clr-segmented label {\\r\\n  flex-grow: 1;\\r\\n  margin: 0;\\r\\n  padding: 4px 0;\\r\\n  font-size: inherit;\\r\\n  font-weight: normal;\\r\\n  line-height: initial;\\r\\n  text-align: center;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-segmented label:first-of-type {\\r\\n  border-radius: 10px 0 0 10px;\\r\\n}\\r\\n\\r\\n.clr-segmented label:last-of-type {\\r\\n  border-radius: 0 10px 10px 0;\\r\\n}\\r\\n\\r\\n.clr-segmented input:checked + label {\\r\\n  color: #fff;\\r\\n  background-color: #666;\\r\\n}\\r\\n\\r\\n.clr-swatches {\\r\\n  order: 2;\\r\\n  width: calc(100% - 32px);\\r\\n  margin: 0 16px;\\r\\n}\\r\\n\\r\\n.clr-swatches div {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  padding-bottom: 12px;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.clr-swatches button {\\r\\n  position: relative;\\r\\n  width: 20px;\\r\\n  height: 20px;\\r\\n  margin: 0 4px 6px 4px;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  border-radius: 50%;\\r\\n  color: inherit;\\r\\n  text-indent: -1000px;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-swatches button:after {\\r\\n  content: '';\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  border-radius: inherit;\\r\\n  background-color: currentColor;\\r\\n  box-shadow: inset 0 0 0 1px rgba(0,0,0,.1);\\r\\n}\\r\\n\\r\\ninput.clr-color {\\r\\n  order: 1;\\r\\n  width: calc(100% - 80px);\\r\\n  height: 32px;\\r\\n  margin: 15px 20px 20px auto;\\r\\n  padding: 0 10px;\\r\\n  border: 1px solid #ddd;\\r\\n  border-radius: 16px;\\r\\n  color: #444;\\r\\n  background-color: #fff;\\r\\n  font-family: sans-serif;\\r\\n  font-size: 14px;\\r\\n  text-align: center;\\r\\n  box-shadow: none;\\r\\n}\\r\\n\\r\\ninput.clr-color:focus {\\r\\n  outline: none;\\r\\n  border: 1px solid #1e90ff;\\r\\n}\\r\\n\\r\\n.clr-close,\\r\\n.clr-clear {\\r\\n  display: none;\\r\\n  order: 2;\\r\\n  height: 24px;\\r\\n  margin: 0 20px 20px;\\r\\n  padding: 0 20px;\\r\\n  border: 0;\\r\\n  border-radius: 12px;\\r\\n  color: #fff;\\r\\n  background-color: #666;\\r\\n  font-family: inherit;\\r\\n  font-size: 12px;\\r\\n  font-weight: 400;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.clr-close {\\r\\n  display: block;\\r\\n  margin: 0 20px 20px auto;\\r\\n}\\r\\n\\r\\n.clr-preview {\\r\\n  position: relative;\\r\\n  width: 32px;\\r\\n  height: 32px;\\r\\n  margin: 15px 0 20px 20px;\\r\\n  border-radius: 50%;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.clr-preview:before,\\r\\n.clr-preview:after {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  border: 1px solid #fff;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n.clr-preview:after {\\r\\n  border: 0;\\r\\n  background-color: currentColor;\\r\\n  box-shadow: inset 0 0 0 1px rgba(0,0,0,.1);\\r\\n}\\r\\n\\r\\n.clr-preview button {\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  z-index: 1;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  border-radius: 50%;\\r\\n  outline-offset: -2px;\\r\\n  background-color: transparent;\\r\\n  text-indent: -9999px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.clr-marker,\\r\\n.clr-hue div,\\r\\n.clr-alpha div,\\r\\n.clr-color {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.clr-field {\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  color: transparent;\\r\\n}\\r\\n\\r\\n.clr-field input {\\r\\n  margin: 0;\\r\\n  direction: ltr;\\r\\n}\\r\\n\\r\\n.clr-field.clr-rtl input {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.clr-field button {\\r\\n  position: absolute;\\r\\n  width: 30px;\\r\\n  height: 100%;\\r\\n  right: 0;\\r\\n  top: 50%;\\r\\n  transform: translateY(-50%);\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  color: inherit;\\r\\n  text-indent: -1000px;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.clr-field.clr-rtl button {\\r\\n  right: auto;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n.clr-field button:after {\\r\\n  content: '';\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  border-radius: inherit;\\r\\n  background-color: currentColor;\\r\\n  box-shadow: inset 0 0 1px rgba(0,0,0,.5);\\r\\n}\\r\\n\\r\\n.clr-alpha,\\r\\n.clr-alpha div,\\r\\n.clr-swatches button,\\r\\n.clr-preview:before,\\r\\n.clr-field button {\\r\\n  background-image: repeating-linear-gradient(45deg, #aaa 25%, transparent 25%, transparent 75%, #aaa 75%, #aaa), repeating-linear-gradient(45deg, #aaa 25%, #fff 25%, #fff 75%, #aaa 75%, #aaa);\\r\\n  background-position: 0 0, 4px 4px;\\r\\n  background-size: 8px 8px;\\r\\n}\\r\\n\\r\\n.clr-marker:focus {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.clr-keyboard-nav .clr-marker:focus,\\r\\n.clr-keyboard-nav .clr-hue input:focus + div,\\r\\n.clr-keyboard-nav .clr-alpha input:focus + div,\\r\\n.clr-keyboard-nav .clr-segmented input:focus + label {\\r\\n  outline: none;\\r\\n  box-shadow: 0 0 0 2px #1e90ff, 0 0 2px 2px #fff;\\r\\n}\\r\\n\\r\\n.clr-picker[data-alpha=\\\"false\\\"] .clr-alpha {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.clr-picker[data-minimal=\\\"true\\\"] {\\r\\n  padding-top: 16px;\\r\\n}\\r\\n\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-gradient,\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-hue,\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-alpha,\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-color,\\r\\n.clr-picker[data-minimal=\\\"true\\\"] .clr-preview {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n/** Dark theme **/\\r\\n\\r\\n.clr-dark {\\r\\n  background-color: #444;\\r\\n}\\r\\n\\r\\n.clr-dark .clr-segmented {\\r\\n  border-color: #777;\\r\\n}\\r\\n\\r\\n.clr-dark .clr-swatches button:after {\\r\\n  box-shadow: inset 0 0 0 1px rgba(255,255,255,.3);\\r\\n}\\r\\n\\r\\n.clr-dark input.clr-color {\\r\\n  color: #fff;\\r\\n  border-color: #777;\\r\\n  background-color: #555;\\r\\n}\\r\\n\\r\\n.clr-dark input.clr-color:focus {\\r\\n  border-color: #1e90ff;\\r\\n}\\r\\n\\r\\n.clr-dark .clr-preview:after {\\r\\n  box-shadow: inset 0 0 0 1px rgba(255,255,255,.5);\\r\\n}\\r\\n\\r\\n.clr-dark .clr-alpha,\\r\\n.clr-dark .clr-alpha div,\\r\\n.clr-dark .clr-swatches button,\\r\\n.clr-dark .clr-preview:before {\\r\\n  background-image: repeating-linear-gradient(45deg, #666 25%, transparent 25%, transparent 75%, #888 75%, #888), repeating-linear-gradient(45deg, #888 25%, #444 25%, #444 75%, #888 75%, #888);\\r\\n}\\r\\n\\r\\n/** Polaroid theme **/\\r\\n\\r\\n.clr-picker.clr-polaroid {\\r\\n  border-radius: 6px;\\r\\n  box-shadow: 0 0 5px rgba(0,0,0,.1), 0 5px 30px rgba(0,0,0,.2);\\r\\n}\\r\\n\\r\\n.clr-picker.clr-polaroid:before {\\r\\n  content: '';\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  width: 16px;\\r\\n  height: 10px;\\r\\n  left: 20px;\\r\\n  top: -10px;\\r\\n  border: solid transparent;\\r\\n  border-width: 0 8px 10px 8px;\\r\\n  border-bottom-color: currentColor;\\r\\n  box-sizing: border-box;\\r\\n  color: #fff;\\r\\n  filter: drop-shadow(0 -4px 3px rgba(0,0,0,.1));\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.clr-picker.clr-polaroid.clr-dark:before {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.clr-picker.clr-polaroid.clr-left:before {\\r\\n  left: auto;\\r\\n  right: 20px;\\r\\n}\\r\\n\\r\\n.clr-picker.clr-polaroid.clr-top:before {\\r\\n  top: auto;\\r\\n  bottom: -10px;\\r\\n  transform: rotateZ(180deg);\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-gradient {\\r\\n  width: calc(100% - 20px);\\r\\n  height: 120px;\\r\\n  margin: 10px;\\r\\n  border-radius: 3px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-hue,\\r\\n.clr-polaroid .clr-alpha {\\r\\n  width: calc(100% - 30px);\\r\\n  height: 10px;\\r\\n  margin: 6px 15px;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-hue div,\\r\\n.clr-polaroid .clr-alpha div {\\r\\n  box-shadow: 0 0 5px rgba(0,0,0,.2);\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-format {\\r\\n  width: calc(100% - 20px);\\r\\n  margin: 0 10px 15px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-swatches {\\r\\n  width: calc(100% - 12px);\\r\\n  margin: 0 6px;\\r\\n}\\r\\n.clr-polaroid .clr-swatches div {\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-swatches button {\\r\\n  width: 22px;\\r\\n  height: 22px;\\r\\n}\\r\\n\\r\\n.clr-polaroid input.clr-color {\\r\\n  width: calc(100% - 60px);\\r\\n  margin: 10px 10px 15px auto;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-clear {\\r\\n  margin: 0 10px 15px 10px;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-close {\\r\\n  margin: 0 10px 15px auto;\\r\\n}\\r\\n\\r\\n.clr-polaroid .clr-preview {\\r\\n  margin: 10px 0 15px 10px;\\r\\n}\\r\\n\\r\\n/** Large theme **/\\r\\n\\r\\n.clr-picker.clr-large {\\r\\n  width: 275px;\\r\\n}\\r\\n\\r\\n.clr-large .clr-gradient {\\r\\n  height: 150px;\\r\\n}\\r\\n\\r\\n.clr-large .clr-swatches button {\\r\\n  width: 22px;\\r\\n  height: 22px;\\r\\n}\\r\\n\\r\\n/** Pill (horizontal) theme **/\\r\\n\\r\\n.clr-picker.clr-pill {\\r\\n  width: 380px;\\r\\n  padding-left: 180px;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.clr-pill .clr-gradient {\\r\\n  position: absolute;\\r\\n  width: 180px;\\r\\n  height: 100%;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  margin-bottom: 0;\\r\\n  border-radius: 3px 0 0 3px;\\r\\n}\\r\\n\\r\\n.clr-pill .clr-hue {\\r\\n  margin-top: 20px;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@melloware/coloris/dist/coloris.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[2]!./components/Sidebar.module.css":
/*!*******************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[2]!./components/Sidebar.module.css ***!
  \*******************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Sidebar_sidebar__G7Mzs {\\n\\tborder-left: 1px solid rgb(236, 236, 236);\\n\\tpadding: 1em 0 0 3vw;\\n\\tflex: 0 0 30vw;\\n\\tmin-width: 300px;\\n\\n}\\n\\n.Sidebar_inputField__u5US_ {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://components/Sidebar.module.css\"],\"names\":[],\"mappings\":\"AAAA;CACC,yCAAyC;CACzC,oBAAoB;CACpB,cAAc;CACd,gBAAgB;;AAEjB;;AAEA;CACC,aAAa;CACb,8BAA8B;AAC/B\",\"sourcesContent\":[\".sidebar {\\n\\tborder-left: 1px solid rgb(236, 236, 236);\\n\\tpadding: 1em 0 0 3vw;\\n\\tflex: 0 0 30vw;\\n\\tmin-width: 300px;\\n\\n}\\n\\n.inputField {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"sidebar\": \"Sidebar_sidebar__G7Mzs\",\n\t\"inputField\": \"Sidebar_inputField__u5US_\"\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZls5XS51c2VbMV0hLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbOV0udXNlWzJdIS4vY29tcG9uZW50cy9TaWRlYmFyLm1vZHVsZS5jc3MiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQ0FBa0MsbUJBQU8sQ0FBQyxtS0FBK0U7QUFDekg7QUFDQTtBQUNBLG1FQUFtRSw4Q0FBOEMseUJBQXlCLG1CQUFtQixxQkFBcUIsS0FBSyxnQ0FBZ0Msa0JBQWtCLG1DQUFtQyxHQUFHLE9BQU8sOEZBQThGLFlBQVksYUFBYSxXQUFXLGFBQWEsT0FBTyxLQUFLLFVBQVUsWUFBWSxvQ0FBb0MsOENBQThDLHlCQUF5QixtQkFBbUIscUJBQXFCLEtBQUssaUJBQWlCLGtCQUFrQixtQ0FBbUMsR0FBRyxtQkFBbUI7QUFDM3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL1NpZGViYXIubW9kdWxlLmNzcz81OGNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanNcIik7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuU2lkZWJhcl9zaWRlYmFyX19HN016cyB7XFxuXFx0Ym9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZ2IoMjM2LCAyMzYsIDIzNik7XFxuXFx0cGFkZGluZzogMWVtIDAgMCAzdnc7XFxuXFx0ZmxleDogMCAwIDMwdnc7XFxuXFx0bWluLXdpZHRoOiAzMDBweDtcXG5cXG59XFxuXFxuLlNpZGViYXJfaW5wdXRGaWVsZF9fdTVVU18ge1xcblxcdGRpc3BsYXk6IGZsZXg7XFxuXFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vY29tcG9uZW50cy9TaWRlYmFyLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7Q0FDQyx5Q0FBeUM7Q0FDekMsb0JBQW9CO0NBQ3BCLGNBQWM7Q0FDZCxnQkFBZ0I7O0FBRWpCOztBQUVBO0NBQ0MsYUFBYTtDQUNiLDhCQUE4QjtBQUMvQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuc2lkZWJhciB7XFxuXFx0Ym9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZ2IoMjM2LCAyMzYsIDIzNik7XFxuXFx0cGFkZGluZzogMWVtIDAgMCAzdnc7XFxuXFx0ZmxleDogMCAwIDMwdnc7XFxuXFx0bWluLXdpZHRoOiAzMDBweDtcXG5cXG59XFxuXFxuLmlucHV0RmllbGQge1xcblxcdGRpc3BsYXk6IGZsZXg7XFxuXFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHtcblx0XCJzaWRlYmFyXCI6IFwiU2lkZWJhcl9zaWRlYmFyX19HN016c1wiLFxuXHRcImlucHV0RmllbGRcIjogXCJTaWRlYmFyX2lucHV0RmllbGRfX3U1VVNfXCJcbn07XG5tb2R1bGUuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[2]!./components/Sidebar.module.css\n"));

/***/ }),

/***/ "./node_modules/@melloware/coloris/dist/coloris.css":
/*!**********************************************************!*\
  !*** ./node_modules/@melloware/coloris/dist/coloris.css ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./coloris.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@melloware/coloris/dist/coloris.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./coloris.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@melloware/coloris/dist/coloris.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./coloris.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[12].use[2]!./node_modules/@melloware/coloris/dist/coloris.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lbGxvd2FyZS9jb2xvcmlzL2Rpc3QvY29sb3Jpcy5jc3MiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDZNQUFpRztBQUNuSCwwQkFBMEIsbUJBQU8sQ0FBQywyZkFBbU87O0FBRXJROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSwyZkFBbU87QUFDek87QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQywyZkFBbU87O0FBRTdQOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbWVsbG93YXJlL2NvbG9yaXMvZGlzdC9jb2xvcmlzLmNzcz8xMjg2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTJdLnVzZVsxXSEuLi8uLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxMl0udXNlWzJdIS4vY29sb3Jpcy5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTJdLnVzZVsxXSEuLi8uLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxMl0udXNlWzJdIS4vY29sb3Jpcy5jc3NcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbMTJdLnVzZVsxXSEuLi8uLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZlsxMl0udXNlWzJdIS4vY29sb3Jpcy5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@melloware/coloris/dist/coloris.css\n"));

/***/ }),

/***/ "./components/Sidebar.module.css":
/*!***************************************!*\
  !*** ./components/Sidebar.module.css ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[2]!./Sidebar.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[2]!./components/Sidebar.module.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[2]!./Sidebar.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[2]!./components/Sidebar.module.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[2]!./Sidebar.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[6].oneOf[9].use[2]!./components/Sidebar.module.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NpZGViYXIubW9kdWxlLmNzcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsb05BQXdHO0FBQzFILDBCQUEwQixtQkFBTyxDQUFDLHlmQUFzUDs7QUFFeFI7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLHlmQUFzUDtBQUM1UDtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLHlmQUFzUDs7QUFFaFI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFVBQVU7O0FBRTFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxVQUFVO0FBQ1o7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9TaWRlYmFyLm1vZHVsZS5jc3M/OWZmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbOV0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZls5XS51c2VbMl0hLi9TaWRlYmFyLm1vZHVsZS5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzldLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0ub25lT2ZbOV0udXNlWzJdIS4vU2lkZWJhci5tb2R1bGUuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS5vbmVPZls5XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLm9uZU9mWzldLnVzZVsyXSEuL1NpZGViYXIubW9kdWxlLmNzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Sidebar.module.css\n"));

/***/ }),

/***/ "./components/Sidebar.jsx":
/*!********************************!*\
  !*** ./components/Sidebar.jsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _SvgContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SvgContext */ \"./components/SvgContext.js\");\n/* harmony import */ var _Sidebar_module_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Sidebar.module.css */ \"./components/Sidebar.module.css\");\n/* harmony import */ var _Sidebar_module_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Sidebar_module_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _melloware_coloris_dist_coloris_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @melloware/coloris/dist/coloris.css */ \"./node_modules/@melloware/coloris/dist/coloris.css\");\n/* harmony import */ var _melloware_coloris_dist_coloris_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_melloware_coloris_dist_coloris_css__WEBPACK_IMPORTED_MODULE_4__);\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst Sidebar = ()=>{\n    _s();\n    const { config } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_SvgContext__WEBPACK_IMPORTED_MODULE_2__.SvgContext);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) {\n            const Coloris = __webpack_require__(/*! @melloware/coloris */ \"./node_modules/@melloware/coloris/dist/umd/coloris.js\");\n            Coloris.init();\n        }\n    }, []);\n    const handleInputChange = (selector, property, value)=>{\n        const applyChange = (element)=>{\n            if (element) {\n                element.style[property] = value;\n            }\n        };\n        if (Array.isArray(selector)) {\n            selector.forEach((sel)=>{\n                if (!sel || sel.trim() === \"\") return;\n                const elements = document.querySelectorAll(sel);\n                elements === null || elements === void 0 ? void 0 : elements.forEach(applyChange);\n            });\n        } else {\n            if (!selector || selector.trim() === \"\") return;\n            const elements = document.querySelectorAll(selector);\n            elements === null || elements === void 0 ? void 0 : elements.forEach(applyChange);\n        }\n    };\n    const renderInput = (input, index)=>{\n        switch(input.type){\n            case \"color\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                            children: input.label\n                        }, void 0, false, {\n                            fileName: \"/Users/JohnJones/Documents/Programming/Projects/pestle/components/Sidebar.jsx\",\n                            lineNumber: 41,\n                            columnNumber: 7\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            defaultValue: input.defaultValue,\n                            onInput: (e)=>handleInputChange(input.selector, input.property, e.target.value),\n                            \"data-coloris\": true\n                        }, void 0, false, {\n                            fileName: \"/Users/JohnJones/Documents/Programming/Projects/pestle/components/Sidebar.jsx\",\n                            lineNumber: 42,\n                            columnNumber: 7\n                        }, undefined)\n                    ]\n                }, index, true, {\n                    fileName: \"/Users/JohnJones/Documents/Programming/Projects/pestle/components/Sidebar.jsx\",\n                    lineNumber: 40,\n                    columnNumber: 6\n                }, undefined);\n            case \"range\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                            children: input.label\n                        }, void 0, false, {\n                            fileName: \"/Users/JohnJones/Documents/Programming/Projects/pestle/components/Sidebar.jsx\",\n                            lineNumber: 53,\n                            columnNumber: 7\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"range\",\n                            min: input.min,\n                            max: input.max,\n                            step: input.step,\n                            defaultValue: input.defaultValue,\n                            list: input.label,\n                            onInput: (e)=>handleInputChange(input.selector, input.property, \"\".concat(e.target.value, \"px\"))\n                        }, void 0, false, {\n                            fileName: \"/Users/JohnJones/Documents/Programming/Projects/pestle/components/Sidebar.jsx\",\n                            lineNumber: 54,\n                            columnNumber: 7\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"datalist\", {\n                            id: input.label,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                value: input.defaultValue\n                            }, void 0, false, {\n                                fileName: \"/Users/JohnJones/Documents/Programming/Projects/pestle/components/Sidebar.jsx\",\n                                lineNumber: 64,\n                                columnNumber: 8\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/JohnJones/Documents/Programming/Projects/pestle/components/Sidebar.jsx\",\n                            lineNumber: 63,\n                            columnNumber: 7\n                        }, undefined)\n                    ]\n                }, index, true, {\n                    fileName: \"/Users/JohnJones/Documents/Programming/Projects/pestle/components/Sidebar.jsx\",\n                    lineNumber: 52,\n                    columnNumber: 6\n                }, undefined);\n            default:\n                return null;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_Sidebar_module_css__WEBPACK_IMPORTED_MODULE_3___default().sidebar),\n        children: config === null || config === void 0 ? void 0 : config.inputs.map((input, index)=>renderInput(input, index))\n    }, void 0, false, {\n        fileName: \"/Users/JohnJones/Documents/Programming/Projects/pestle/components/Sidebar.jsx\",\n        lineNumber: 73,\n        columnNumber: 3\n    }, undefined);\n};\n_s(Sidebar, \"5ZxoMc3QafKFnpYFif1a47QXuos=\");\n_c = Sidebar;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sidebar);\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NpZGViYXIuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFxRDtBQUNYO0FBQ0E7QUFDRztBQUU3QyxNQUFNSyxVQUFVOztJQUNmLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdMLGlEQUFVQSxDQUFDRSxtREFBVUE7SUFFeENELGdEQUFTQSxDQUFDO1FBQ1QsSUFBSSxJQUE2QixFQUFFO1lBQ2xDLE1BQU1LLFVBQVVDLG1CQUFPQSxDQUFDLGlGQUFvQjtZQUM1Q0QsUUFBUUUsSUFBSTtRQUNiO0lBQ0QsR0FBRyxFQUFFO0lBRUwsTUFBTUMsb0JBQW9CLENBQUNDLFVBQVVDLFVBQVVDO1FBQzlDLE1BQU1DLGNBQWMsQ0FBQ0M7WUFDcEIsSUFBSUEsU0FBUztnQkFDWkEsUUFBUUMsS0FBSyxDQUFDSixTQUFTLEdBQUdDO1lBQzNCO1FBQ0Q7UUFFQSxJQUFJSSxNQUFNQyxPQUFPLENBQUNQLFdBQVc7WUFDNUJBLFNBQVNRLE9BQU8sQ0FBQ0MsQ0FBQUE7Z0JBQ2hCLElBQUksQ0FBQ0EsT0FBT0EsSUFBSUMsSUFBSSxPQUFPLElBQUk7Z0JBQy9CLE1BQU1DLFdBQVdDLFNBQVNDLGdCQUFnQixDQUFDSjtnQkFDM0NFLHFCQUFBQSwrQkFBQUEsU0FBVUgsT0FBTyxDQUFDTDtZQUNuQjtRQUNELE9BQU87WUFDTixJQUFJLENBQUNILFlBQVlBLFNBQVNVLElBQUksT0FBTyxJQUFJO1lBQ3pDLE1BQU1DLFdBQVdDLFNBQVNDLGdCQUFnQixDQUFDYjtZQUMzQ1cscUJBQUFBLCtCQUFBQSxTQUFVSCxPQUFPLENBQUNMO1FBQ25CO0lBQ0Q7SUFFQSxNQUFNVyxjQUFjLENBQUNDLE9BQU9DO1FBQzNCLE9BQVFELE1BQU1FLElBQUk7WUFDakIsS0FBSztnQkFDSixxQkFDQyw4REFBQ0M7O3NDQUNBLDhEQUFDQztzQ0FBT0osTUFBTUksS0FBSzs7Ozs7O3NDQUNuQiw4REFBQ0o7NEJBQ0FFLE1BQUs7NEJBQ0xHLGNBQWNMLE1BQU1LLFlBQVk7NEJBQ2hDQyxTQUFTLENBQUNDLElBQU12QixrQkFBa0JnQixNQUFNZixRQUFRLEVBQUVlLE1BQU1kLFFBQVEsRUFBRXFCLEVBQUVDLE1BQU0sQ0FBQ3JCLEtBQUs7NEJBQ2hGc0IsY0FBWTs7Ozs7OzttQkFOSlI7Ozs7O1lBVVosS0FBSztnQkFDSixxQkFDQyw4REFBQ0U7O3NDQUNBLDhEQUFDQztzQ0FBT0osTUFBTUksS0FBSzs7Ozs7O3NDQUNuQiw4REFBQ0o7NEJBQ0FFLE1BQUs7NEJBQ0xRLEtBQUtWLE1BQU1VLEdBQUc7NEJBQ2RDLEtBQUtYLE1BQU1XLEdBQUc7NEJBQ2RDLE1BQU1aLE1BQU1ZLElBQUk7NEJBQ2hCUCxjQUFjTCxNQUFNSyxZQUFZOzRCQUNoQ1EsTUFBTWIsTUFBTUksS0FBSzs0QkFDakJFLFNBQVMsQ0FBQ0MsSUFBTXZCLGtCQUFrQmdCLE1BQU1mLFFBQVEsRUFBRWUsTUFBTWQsUUFBUSxFQUFFLEdBQWtCLE9BQWZxQixFQUFFQyxNQUFNLENBQUNyQixLQUFLLEVBQUM7Ozs7OztzQ0FFckYsOERBQUMyQjs0QkFBU0MsSUFBSWYsTUFBTUksS0FBSztzQ0FDeEIsNEVBQUNZO2dDQUFPN0IsT0FBT2EsTUFBTUssWUFBWTs7Ozs7Ozs7Ozs7O21CQVp6Qko7Ozs7O1lBZ0JaO2dCQUFTLE9BQU87UUFDakI7SUFDRDtJQUVBLHFCQUNDLDhEQUFDRTtRQUFJYyxXQUFXdkMsb0VBQWM7a0JBQzVCRSxtQkFBQUEsNkJBQUFBLE9BQVF1QyxNQUFNLENBQUNDLEdBQUcsQ0FBQyxDQUFDcEIsT0FBT0MsUUFBVUYsWUFBWUMsT0FBT0M7Ozs7OztBQUc1RDtHQXZFTXRCO0tBQUFBO0FBeUVOLCtEQUFlQSxPQUFPQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvU2lkZWJhci5qc3g/NGNiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBTdmdDb250ZXh0IH0gZnJvbSBcIi4vU3ZnQ29udGV4dFwiO1xuaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9TaWRlYmFyLm1vZHVsZS5jc3NcIjtcbmltcG9ydCBcIkBtZWxsb3dhcmUvY29sb3Jpcy9kaXN0L2NvbG9yaXMuY3NzXCI7XG5cbmNvbnN0IFNpZGViYXIgPSAoKSA9PiB7XG5cdGNvbnN0IHsgY29uZmlnIH0gPSB1c2VDb250ZXh0KFN2Z0NvbnRleHQpO1xuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdGNvbnN0IENvbG9yaXMgPSByZXF1aXJlKFwiQG1lbGxvd2FyZS9jb2xvcmlzXCIpO1xuXHRcdFx0Q29sb3Jpcy5pbml0KCk7XG5cdFx0fVxuXHR9LCBbXSk7XG5cblx0Y29uc3QgaGFuZGxlSW5wdXRDaGFuZ2UgPSAoc2VsZWN0b3IsIHByb3BlcnR5LCB2YWx1ZSkgPT4ge1xuXHRcdGNvbnN0IGFwcGx5Q2hhbmdlID0gKGVsZW1lbnQpID0+IHtcblx0XHRcdGlmIChlbGVtZW50KSB7XG5cdFx0XHRcdGVsZW1lbnQuc3R5bGVbcHJvcGVydHldID0gdmFsdWU7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdGlmIChBcnJheS5pc0FycmF5KHNlbGVjdG9yKSkge1xuXHRcdFx0c2VsZWN0b3IuZm9yRWFjaChzZWwgPT4ge1xuXHRcdFx0XHRpZiAoIXNlbCB8fCBzZWwudHJpbSgpID09PSAnJykgcmV0dXJuO1xuXHRcdFx0XHRjb25zdCBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsKTtcblx0XHRcdFx0ZWxlbWVudHM/LmZvckVhY2goYXBwbHlDaGFuZ2UpO1xuXHRcdFx0fSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICghc2VsZWN0b3IgfHwgc2VsZWN0b3IudHJpbSgpID09PSAnJykgcmV0dXJuO1xuXHRcdFx0Y29uc3QgZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcblx0XHRcdGVsZW1lbnRzPy5mb3JFYWNoKGFwcGx5Q2hhbmdlKTtcblx0XHR9XG5cdH07XG5cblx0Y29uc3QgcmVuZGVySW5wdXQgPSAoaW5wdXQsIGluZGV4KSA9PiB7XG5cdFx0c3dpdGNoIChpbnB1dC50eXBlKSB7XG5cdFx0XHRjYXNlICdjb2xvcic6XG5cdFx0XHRcdHJldHVybiAoXG5cdFx0XHRcdFx0PGRpdiBrZXk9e2luZGV4fT5cblx0XHRcdFx0XHRcdDxsYWJlbD57aW5wdXQubGFiZWx9PC9sYWJlbD5cblx0XHRcdFx0XHRcdDxpbnB1dFxuXHRcdFx0XHRcdFx0XHR0eXBlPVwidGV4dFwiXG5cdFx0XHRcdFx0XHRcdGRlZmF1bHRWYWx1ZT17aW5wdXQuZGVmYXVsdFZhbHVlfVxuXHRcdFx0XHRcdFx0XHRvbklucHV0PXsoZSkgPT4gaGFuZGxlSW5wdXRDaGFuZ2UoaW5wdXQuc2VsZWN0b3IsIGlucHV0LnByb3BlcnR5LCBlLnRhcmdldC52YWx1ZSl9XG5cdFx0XHRcdFx0XHRcdGRhdGEtY29sb3Jpc1xuXHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0KTtcblx0XHRcdGNhc2UgJ3JhbmdlJzpcblx0XHRcdFx0cmV0dXJuIChcblx0XHRcdFx0XHQ8ZGl2IGtleT17aW5kZXh9PlxuXHRcdFx0XHRcdFx0PGxhYmVsPntpbnB1dC5sYWJlbH08L2xhYmVsPlxuXHRcdFx0XHRcdFx0PGlucHV0XG5cdFx0XHRcdFx0XHRcdHR5cGU9XCJyYW5nZVwiXG5cdFx0XHRcdFx0XHRcdG1pbj17aW5wdXQubWlufVxuXHRcdFx0XHRcdFx0XHRtYXg9e2lucHV0Lm1heH1cblx0XHRcdFx0XHRcdFx0c3RlcD17aW5wdXQuc3RlcH1cblx0XHRcdFx0XHRcdFx0ZGVmYXVsdFZhbHVlPXtpbnB1dC5kZWZhdWx0VmFsdWV9XG5cdFx0XHRcdFx0XHRcdGxpc3Q9e2lucHV0LmxhYmVsfVxuXHRcdFx0XHRcdFx0XHRvbklucHV0PXsoZSkgPT4gaGFuZGxlSW5wdXRDaGFuZ2UoaW5wdXQuc2VsZWN0b3IsIGlucHV0LnByb3BlcnR5LCBgJHtlLnRhcmdldC52YWx1ZX1weGApfVxuXHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHRcdDxkYXRhbGlzdCBpZD17aW5wdXQubGFiZWx9PlxuXHRcdFx0XHRcdFx0XHQ8b3B0aW9uIHZhbHVlPXtpbnB1dC5kZWZhdWx0VmFsdWV9Pjwvb3B0aW9uPlxuXHRcdFx0XHRcdFx0PC9kYXRhbGlzdD5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0KTtcblx0XHRcdGRlZmF1bHQ6IHJldHVybiBudWxsO1xuXHRcdH1cblx0fTtcblxuXHRyZXR1cm4gKFxuXHRcdDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuc2lkZWJhcn0+XG5cdFx0XHR7Y29uZmlnPy5pbnB1dHMubWFwKChpbnB1dCwgaW5kZXgpID0+IHJlbmRlcklucHV0KGlucHV0LCBpbmRleCkpfVxuXHRcdDwvZGl2PlxuXHQpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2lkZWJhcjtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJTdmdDb250ZXh0Iiwic3R5bGVzIiwiU2lkZWJhciIsImNvbmZpZyIsIkNvbG9yaXMiLCJyZXF1aXJlIiwiaW5pdCIsImhhbmRsZUlucHV0Q2hhbmdlIiwic2VsZWN0b3IiLCJwcm9wZXJ0eSIsInZhbHVlIiwiYXBwbHlDaGFuZ2UiLCJlbGVtZW50Iiwic3R5bGUiLCJBcnJheSIsImlzQXJyYXkiLCJmb3JFYWNoIiwic2VsIiwidHJpbSIsImVsZW1lbnRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVuZGVySW5wdXQiLCJpbnB1dCIsImluZGV4IiwidHlwZSIsImRpdiIsImxhYmVsIiwiZGVmYXVsdFZhbHVlIiwib25JbnB1dCIsImUiLCJ0YXJnZXQiLCJkYXRhLWNvbG9yaXMiLCJtaW4iLCJtYXgiLCJzdGVwIiwibGlzdCIsImRhdGFsaXN0IiwiaWQiLCJvcHRpb24iLCJjbGFzc05hbWUiLCJzaWRlYmFyIiwiaW5wdXRzIiwibWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Sidebar.jsx\n"));

/***/ }),

/***/ "./node_modules/@melloware/coloris/dist/umd/coloris.js":
/*!*************************************************************!*\
  !*** ./node_modules/@melloware/coloris/dist/umd/coloris.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__; // https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n\n// Uses Node, AMD or browser globals to create a module.\n\n// If you want something that will work in other stricter CommonJS environments,\n// or if you need to create a circular dependency, see commonJsStrict.js\n\n// Defines a module \"returnExports\" that depends another module called \"b\".\n// Note that the name of the module is implied by the file name. It is best\n// if the file name and the exported global have matching names.\n\n// If the 'b' module also uses this type of boilerplate, then\n// in the browser, it will create a global .b that is used below.\n\n// If you do not want to support the browser global path, then you\n// can remove the `root` use and the passing `this` as the first arg to\n// the top function.\n\n// if the module has no dependencies, the above pattern can be simplified to\n(function (root, factory) {\n  if (true) {\n    // AMD. Register as an unnamed module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else\n  {}\n})(typeof self !== 'undefined' ? self : void 0, function () {\n  // Just return a value to define the module export.\n  // This example returns an object, but the module\n  // can return a function as the exported value.\n  /*!\r\n  * Copyright (c) 2021-2024 Momo Bassit.\r\n  * Licensed under the MIT License (MIT)\r\n  * https://github.com/mdbassit/Coloris\r\n  * Version: 0.24.0\r\n  * NPM: https://github.com/melloware/coloris-npm\r\n  */\n\n  return ((window, document, Math, undefined) => {\n    const ctx = document.createElement('canvas').getContext('2d');\n    const currentColor = { r: 0, g: 0, b: 0, h: 0, s: 0, v: 0, a: 1 };\n    let container,picker,colorArea,colorMarker,colorPreview,colorValue,clearButton,closeButton,\n      hueSlider,hueMarker,alphaSlider,alphaMarker,currentEl,currentFormat,oldColor,keyboardNav,\n      colorAreaDims = {};\n\n    // Default settings\n    const settings = {\n      el: '[data-coloris]',\n      parent: 'body',\n      theme: 'default',\n      themeMode: 'light',\n      rtl: false,\n      wrap: true,\n      margin: 2,\n      format: 'hex',\n      formatToggle: false,\n      swatches: [],\n      swatchesOnly: false,\n      alpha: true,\n      forceAlpha: false,\n      focusInput: true,\n      selectInput: false,\n      inline: false,\n      defaultColor: '#000000',\n      clearButton: false,\n      clearLabel: 'Clear',\n      closeButton: false,\n      closeLabel: 'Close',\n      onChange: () => undefined,\n      a11y: {\n        open: 'Open color picker',\n        close: 'Close color picker',\n        clear: 'Clear the selected color',\n        marker: 'Saturation: {s}. Brightness: {v}.',\n        hueSlider: 'Hue slider',\n        alphaSlider: 'Opacity slider',\n        input: 'Color value field',\n        format: 'Color format',\n        swatch: 'Color swatch',\n        instruction: 'Saturation and brightness selector. Use up, down, left and right arrow keys to select.'\n      }\n    };\n\n    // Virtual instances cache\n    const instances = {};\n    let currentInstanceId = '';\n    let defaultInstance = {};\n    let hasInstance = false;\n\n    /**\r\n     * Configure the color picker.\r\n     * @param {object} options Configuration options.\r\n     */\n    function configure(options) {\n      if (typeof options !== 'object') {\n        return;\n      }\n\n      for (const key in options) {\n        switch (key) {\n          case 'el':\n            bindFields(options.el);\n            if (options.wrap !== false) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'parent':\n            container = options.parent instanceof HTMLElement ? options.parent : document.querySelector(options.parent);\n            if (container) {\n              container.appendChild(picker);\n              settings.parent = options.parent;\n\n              // document.body is special\n              if (container === document.body) {\n                container = undefined;\n              }\n            }\n            break;\n          case 'themeMode':\n            settings.themeMode = options.themeMode;\n            if (options.themeMode === 'auto' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n              settings.themeMode = 'dark';\n            }\n          // The lack of a break statement is intentional\n          case 'theme':\n            if (options.theme) {\n              settings.theme = options.theme;\n            }\n\n            // Set the theme and color scheme\n            picker.className = \"clr-picker clr-\" + settings.theme + \" clr-\" + settings.themeMode;\n\n            // Update the color picker's position if inline mode is in use\n            if (settings.inline) {\n              updatePickerPosition();\n            }\n            break;\n          case 'rtl':\n            settings.rtl = !!options.rtl;\n            Array.from(document.getElementsByClassName('clr-field')).forEach((field) => field.classList.toggle('clr-rtl', settings.rtl));\n            break;\n          case 'margin':\n            options.margin *= 1;\n            settings.margin = !isNaN(options.margin) ? options.margin : settings.margin;\n            break;\n          case 'wrap':\n            if (options.el && options.wrap) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'formatToggle':\n            settings.formatToggle = !!options.formatToggle;\n            getEl('clr-format').style.display = settings.formatToggle ? 'block' : 'none';\n            if (settings.formatToggle) {\n              settings.format = 'auto';\n            }\n            break;\n          case 'swatches':\n            if (Array.isArray(options.swatches)) {\n              const swatchesContainer = getEl('clr-swatches');\n              const swatches = document.createElement('div');\n\n              // Clear current swatches\n              swatchesContainer.textContent = '';\n\n              // Build new swatches\n              options.swatches.forEach((swatch, i) => {\n                const button = document.createElement('button');\n\n                button.setAttribute('type', \"button\");\n                button.setAttribute('id', \"clr-swatch-\" + i);\n                button.setAttribute('aria-labelledby', \"clr-swatch-label clr-swatch-\" + i);\n                button.style.color = swatch;\n                button.textContent = swatch;\n\n                swatches.appendChild(button);\n              });\n\n              // Append new swatches if any\n              if (options.swatches.length) {\n                swatchesContainer.appendChild(swatches);\n              }\n\n              settings.swatches = options.swatches.slice();\n            }\n            break;\n          case 'swatchesOnly':\n            settings.swatchesOnly = !!options.swatchesOnly;\n            picker.setAttribute('data-minimal', settings.swatchesOnly);\n            break;\n          case 'alpha':\n            settings.alpha = !!options.alpha;\n            picker.setAttribute('data-alpha', settings.alpha);\n            break;\n          case 'inline':\n            settings.inline = !!options.inline;\n            picker.setAttribute('data-inline', settings.inline);\n\n            if (settings.inline) {\n              const defaultColor = options.defaultColor || settings.defaultColor;\n\n              currentFormat = getColorFormatFromStr(defaultColor);\n              updatePickerPosition();\n              setColorFromStr(defaultColor);\n            }\n            break;\n          case 'clearButton':\n            // Backward compatibility\n            if (typeof options.clearButton === 'object') {\n              if (options.clearButton.label) {\n                settings.clearLabel = options.clearButton.label;\n                clearButton.innerHTML = settings.clearLabel;\n              }\n\n              options.clearButton = options.clearButton.show;\n            }\n\n            settings.clearButton = !!options.clearButton;\n            clearButton.style.display = settings.clearButton ? 'block' : 'none';\n            break;\n          case 'clearLabel':\n            settings.clearLabel = options.clearLabel;\n            clearButton.innerHTML = settings.clearLabel;\n            break;\n          case 'closeButton':\n            settings.closeButton = !!options.closeButton;\n\n            if (settings.closeButton) {\n              picker.insertBefore(closeButton, colorPreview);\n            } else {\n              colorPreview.appendChild(closeButton);\n            }\n\n            break;\n          case 'closeLabel':\n            settings.closeLabel = options.closeLabel;\n            closeButton.innerHTML = settings.closeLabel;\n            break;\n          case 'a11y':\n            const labels = options.a11y;\n            let update = false;\n\n            if (typeof labels === 'object') {\n              for (const label in labels) {\n                if (labels[label] && settings.a11y[label]) {\n                  settings.a11y[label] = labels[label];\n                  update = true;\n                }\n              }\n            }\n\n            if (update) {\n              const openLabel = getEl('clr-open-label');\n              const swatchLabel = getEl('clr-swatch-label');\n\n              openLabel.innerHTML = settings.a11y.open;\n              swatchLabel.innerHTML = settings.a11y.swatch;\n              closeButton.setAttribute('aria-label', settings.a11y.close);\n              clearButton.setAttribute('aria-label', settings.a11y.clear);\n              hueSlider.setAttribute('aria-label', settings.a11y.hueSlider);\n              alphaSlider.setAttribute('aria-label', settings.a11y.alphaSlider);\n              colorValue.setAttribute('aria-label', settings.a11y.input);\n              colorArea.setAttribute('aria-label', settings.a11y.instruction);\n            }\n            break;\n          default:\n            settings[key] = options[key];\n        }\n      }\n    }\n\n    /**\r\n     * Add or update a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     * @param {Object} options Per-instance options to apply.\r\n     */\n    function setVirtualInstance(selector, options) {\n      if (typeof selector === 'string' && typeof options === 'object') {\n        instances[selector] = options;\n        hasInstance = true;\n      }\n    }\n\n    /**\r\n     * Remove a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     */\n    function removeVirtualInstance(selector) {\n      delete instances[selector];\n\n      if (Object.keys(instances).length === 0) {\n        hasInstance = false;\n\n        if (selector === currentInstanceId) {\n          resetVirtualInstance();\n        }\n      }\n    }\n\n    /**\r\n     * Attach a virtual instance to an element if it matches a selector.\r\n     * @param {Object} element Target element that will receive a virtual instance if applicable.\r\n     */\n    function attachVirtualInstance(element) {\n      if (hasInstance) {\n        // These options can only be set globally, not per instance\n        const unsupportedOptions = ['el', 'wrap', 'rtl', 'inline', 'defaultColor', 'a11y'];\n\n        for (let selector in instances) {\n          const options = instances[selector];\n\n          // If the element matches an instance's CSS selector\n          if (element.matches(selector)) {\n            currentInstanceId = selector;\n            defaultInstance = {};\n\n            // Delete unsupported options\n            unsupportedOptions.forEach((option) => delete options[option]);\n\n            // Back up the default options so we can restore them later\n            for (let option in options) {\n              defaultInstance[option] = Array.isArray(settings[option]) ? settings[option].slice() : settings[option];\n            }\n\n            // Set the instance's options\n            configure(options);\n            break;\n          }\n        }\n      }\n    }\n\n    /**\r\n     * Revert any per-instance options that were previously applied.\r\n     */\n    function resetVirtualInstance() {\n      if (Object.keys(defaultInstance).length > 0) {\n        configure(defaultInstance);\n        currentInstanceId = '';\n        defaultInstance = {};\n      }\n    }\n\n    /**\r\n     * Bind the color picker to input fields that match the selector.\r\n     * @param {(string|HTMLElement|HTMLElement[])} selector A CSS selector string, a DOM element or a list of DOM elements.\r\n     */\n    function bindFields(selector) {\n      if (selector instanceof HTMLElement) {\n        selector = [selector];\n      }\n\n      if (Array.isArray(selector)) {\n        selector.forEach((field) => {\n          addListener(field, 'click', openPicker);\n          addListener(field, 'input', updateColorPreview);\n        });\n      } else {\n        addListener(document, 'click', selector, openPicker);\n        addListener(document, 'input', selector, updateColorPreview);\n      }\n    }\n\n    /**\r\n     * Open the color picker.\r\n     * @param {object} event The event that opens the color picker.\r\n     */\n    function openPicker(event) {\n      // Skip if inline mode is in use\n      if (settings.inline) {\n        return;\n      }\n\n      // Apply any per-instance options first\n      attachVirtualInstance(event.target);\n\n      currentEl = event.target;\n      oldColor = currentEl.value;\n      currentFormat = getColorFormatFromStr(oldColor);\n      picker.classList.add('clr-open');\n\n      updatePickerPosition();\n      setColorFromStr(oldColor);\n\n      if (settings.focusInput || settings.selectInput) {\n        colorValue.focus({ preventScroll: true });\n        colorValue.setSelectionRange(currentEl.selectionStart, currentEl.selectionEnd);\n      }\n\n      if (settings.selectInput) {\n        colorValue.select();\n      }\n\n      // Always focus the first element when using keyboard navigation\n      if (keyboardNav || settings.swatchesOnly) {\n        getFocusableElements().shift().focus();\n      }\n\n      // Trigger an \"open\" event\n      currentEl.dispatchEvent(new Event('open', { bubbles: true }));\n    }\n\n    /**\r\n     * Update the color picker's position and the color gradient's offset\r\n     */\n    function updatePickerPosition() {\n      if (!picker || !currentEl && !settings.inline) return; //** DO NOT REMOVE: in case called before initialized\n      const parent = container;\n      const scrollY = window.scrollY;\n      const pickerWidth = picker.offsetWidth;\n      const pickerHeight = picker.offsetHeight;\n      const reposition = { left: false, top: false };\n      let parentStyle, parentMarginTop, parentBorderTop;\n      let offset = { x: 0, y: 0 };\n\n      if (parent) {\n        parentStyle = window.getComputedStyle(parent);\n        parentMarginTop = parseFloat(parentStyle.marginTop);\n        parentBorderTop = parseFloat(parentStyle.borderTopWidth);\n\n        offset = parent.getBoundingClientRect();\n        offset.y += parentBorderTop + scrollY;\n      }\n\n      if (!settings.inline) {\n        const coords = currentEl.getBoundingClientRect();\n        let left = coords.x;\n        let top = scrollY + coords.y + coords.height + settings.margin;\n\n        // If the color picker is inside a custom container\n        // set the position relative to it\n        if (parent) {\n          left -= offset.x;\n          top -= offset.y;\n\n          if (left + pickerWidth > parent.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight > parent.clientHeight - parentMarginTop) {\n            if (pickerHeight + settings.margin <= coords.top - (offset.y - scrollY)) {\n              top -= coords.height + pickerHeight + settings.margin * 2;\n              reposition.top = true;\n            }\n          }\n\n          top += parent.scrollTop;\n\n          // Otherwise set the position relative to the whole document\n        } else {\n          if (left + pickerWidth > document.documentElement.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight - scrollY > document.documentElement.clientHeight) {\n            if (pickerHeight + settings.margin <= coords.top) {\n              top = scrollY + coords.y - pickerHeight - settings.margin;\n              reposition.top = true;\n            }\n          }\n        }\n\n        picker.classList.toggle('clr-left', reposition.left);\n        picker.classList.toggle('clr-top', reposition.top);\n        picker.style.left = left + \"px\";\n        picker.style.top = top + \"px\";\n        offset.x += picker.offsetLeft;\n        offset.y += picker.offsetTop;\n      }\n\n      colorAreaDims = {\n        width: colorArea.offsetWidth,\n        height: colorArea.offsetHeight,\n        x: colorArea.offsetLeft + offset.x,\n        y: colorArea.offsetTop + offset.y\n      };\n    }\n\n    /**\r\n     * Wrap the linked input fields in a div that adds a color preview.\r\n     * @param {(string|HTMLElement|HTMLElement[])} selector A CSS selector string, a DOM element or a list of DOM elements.\r\n     */\n    function wrapFields(selector) {\n      if (selector instanceof HTMLElement) {\n        wrapColorField(selector);\n      } else if (Array.isArray(selector)) {\n        selector.forEach(wrapColorField);\n      } else {\n        document.querySelectorAll(selector).forEach(wrapColorField);\n      }\n    }\n\n    /**\r\n       * Wrap an input field in a div that adds a color preview.\r\n       * @param {object} field The input field.\r\n       */\n    function wrapColorField(field) {\n      const parentNode = field.parentNode;\n\n      if (!parentNode.classList.contains('clr-field')) {\n        const wrapper = document.createElement('div');\n        let classes = 'clr-field';\n\n        if (settings.rtl || field.classList.contains('clr-rtl')) {\n          classes += ' clr-rtl';\n        }\n\n        wrapper.innerHTML = '<button type=\"button\" aria-labelledby=\"clr-open-label\"></button>';\n        parentNode.insertBefore(wrapper, field);\n        wrapper.className = classes;\n        wrapper.style.color = field.value;\n        wrapper.appendChild(field);\n      }\n    }\n\n    /**\r\n     * Update the color preview of an input field\r\n     * @param {object} event The \"input\" event that triggers the color change.\r\n     */\n    function updateColorPreview(event) {\n      const parent = event.target.parentNode;\n\n      // Only update the preview if the field has been previously wrapped\n      if (parent.classList.contains('clr-field')) {\n        parent.style.color = event.target.value;\n      }\n    }\n\n    /**\r\n     * Close the color picker.\r\n     * @param {boolean} [revert] If true, revert the color to the original value.\r\n     */\n    function closePicker(revert) {\n      if (currentEl && !settings.inline) {\n        const prevEl = currentEl;\n\n        // Revert the color to the original value if needed\n        if (revert) {\n          // This will prevent the \"change\" event on the colorValue input to execute its handler\n          currentEl = undefined;\n\n          if (oldColor !== prevEl.value) {\n            prevEl.value = oldColor;\n\n            // Trigger an \"input\" event to force update the thumbnail next to the input field\n            prevEl.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n        }\n\n        // Trigger a \"change\" event if needed\n        setTimeout(() => {// Add this to the end of the event loop\n          if (oldColor !== prevEl.value) {\n            prevEl.dispatchEvent(new Event('change', { bubbles: true }));\n          }\n        });\n\n        // Hide the picker dialog\n        picker.classList.remove('clr-open');\n\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Trigger a \"close\" event\n        prevEl.dispatchEvent(new Event('close', { bubbles: true }));\n\n        if (settings.focusInput) {\n          prevEl.focus({ preventScroll: true });\n        }\n\n        // This essentially marks the picker as closed\n        currentEl = undefined;\n      }\n    }\n\n    /**\r\n     * Set the active color from a string.\r\n     * @param {string} str String representing a color.\r\n     */\n    function setColorFromStr(str) {\n      const rgba = strToRGBA(str);\n      const hsva = RGBAtoHSVA(rgba);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n\n      // Update the UI\n      hueSlider.value = hsva.h;\n      picker.style.color = \"hsl(\" + hsva.h + \", 100%, 50%)\";\n      hueMarker.style.left = hsva.h / 360 * 100 + \"%\";\n\n      colorMarker.style.left = colorAreaDims.width * hsva.s / 100 + \"px\";\n      colorMarker.style.top = colorAreaDims.height - colorAreaDims.height * hsva.v / 100 + \"px\";\n\n      alphaSlider.value = hsva.a * 100;\n      alphaMarker.style.left = hsva.a * 100 + \"%\";\n    }\n\n    /**\r\n     * Guess the color format from a string.\r\n     * @param {string} str String representing a color.\r\n     * @return {string} The color format.\r\n     */\n    function getColorFormatFromStr(str) {\n      const format = str.substring(0, 3).toLowerCase();\n\n      if (format === 'rgb' || format === 'hsl') {\n        return format;\n      }\n\n      return 'hex';\n    }\n\n    /**\r\n     * Copy the active color to the linked input field.\r\n     * @param {number} [color] Color value to override the active color.\r\n     */\n    function pickColor(color) {\n      color = color !== undefined ? color : colorValue.value;\n\n      if (currentEl) {\n        currentEl.value = color;\n        currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n      }\n\n      if (settings.onChange) {\n        settings.onChange.call(window, color, currentEl);\n      }\n\n      document.dispatchEvent(new CustomEvent('coloris:pick', { detail: { color, currentEl } }));\n    }\n\n    /**\r\n     * Set the active color based on a specific point in the color gradient.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setColorAtPosition(x, y) {\n      const hsva = {\n        h: hueSlider.value * 1,\n        s: x / colorAreaDims.width * 100,\n        v: 100 - y / colorAreaDims.height * 100,\n        a: alphaSlider.value / 100\n      };\n      const rgba = HSVAtoRGBA(hsva);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n      pickColor();\n    }\n\n    /**\r\n     * Update the color marker's accessibility label.\r\n     * @param {number} saturation\r\n     * @param {number} value\r\n     */\n    function updateMarkerA11yLabel(saturation, value) {\n      let label = settings.a11y.marker;\n\n      saturation = saturation.toFixed(1) * 1;\n      value = value.toFixed(1) * 1;\n      label = label.replace('{s}', saturation);\n      label = label.replace('{v}', value);\n      colorMarker.setAttribute('aria-label', label);\n    }\n\n    //\n    /**\r\n     * Get the pageX and pageY positions of the pointer.\r\n     * @param {object} event The MouseEvent or TouchEvent object.\r\n     * @return {object} The pageX and pageY positions.\r\n     */\n    function getPointerPosition(event) {\n      return {\n        pageX: event.changedTouches ? event.changedTouches[0].pageX : event.pageX,\n        pageY: event.changedTouches ? event.changedTouches[0].pageY : event.pageY\n      };\n    }\n\n    /**\r\n     * Move the color marker when dragged.\r\n     * @param {object} event The MouseEvent object.\r\n     */\n    function moveMarker(event) {\n      const pointer = getPointerPosition(event);\n      let x = pointer.pageX - colorAreaDims.x;\n      let y = pointer.pageY - colorAreaDims.y;\n\n      if (container) {\n        y += container.scrollTop;\n      }\n\n      setMarkerPosition(x, y);\n\n      // Prevent scrolling while dragging the marker\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    /**\r\n     * Move the color marker when the arrow keys are pressed.\r\n     * @param {number} offsetX The horizontal amount to move.\r\n     * @param {number} offsetY The vertical amount to move.\r\n     */\n    function moveMarkerOnKeydown(offsetX, offsetY) {\n      let x = colorMarker.style.left.replace('px', '') * 1 + offsetX;\n      let y = colorMarker.style.top.replace('px', '') * 1 + offsetY;\n\n      setMarkerPosition(x, y);\n    }\n\n    /**\r\n     * Set the color marker's position.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setMarkerPosition(x, y) {\n      // Make sure the marker doesn't go out of bounds\n      x = x < 0 ? 0 : x > colorAreaDims.width ? colorAreaDims.width : x;\n      y = y < 0 ? 0 : y > colorAreaDims.height ? colorAreaDims.height : y;\n\n      // Set the position\n      colorMarker.style.left = x + \"px\";\n      colorMarker.style.top = y + \"px\";\n\n      // Update the color\n      setColorAtPosition(x, y);\n\n      // Make sure the marker is focused\n      colorMarker.focus();\n    }\n\n    /**\r\n     * Update the color picker's input field and preview thumb.\r\n     * @param {Object} rgba Red, green, blue and alpha values.\r\n     * @param {Object} [hsva] Hue, saturation, value and alpha values.\r\n     */\n    function updateColor(rgba, hsva) {if (rgba === void 0) {rgba = {};}if (hsva === void 0) {hsva = {};}\n      let format = settings.format;\n\n      for (const key in rgba) {\n        currentColor[key] = rgba[key];\n      }\n\n      for (const key in hsva) {\n        currentColor[key] = hsva[key];\n      }\n\n      const hex = RGBAToHex(currentColor);\n      const opaqueHex = hex.substring(0, 7);\n\n      colorMarker.style.color = opaqueHex;\n      alphaMarker.parentNode.style.color = opaqueHex;\n      alphaMarker.style.color = hex;\n      colorPreview.style.color = hex;\n\n      // Force repaint the color and alpha gradients as a workaround for a Google Chrome bug\n      colorArea.style.display = 'none';\n      colorArea.offsetHeight;\n      colorArea.style.display = '';\n      alphaMarker.nextElementSibling.style.display = 'none';\n      alphaMarker.nextElementSibling.offsetHeight;\n      alphaMarker.nextElementSibling.style.display = '';\n\n      if (format === 'mixed') {\n        format = currentColor.a === 1 ? 'hex' : 'rgb';\n      } else if (format === 'auto') {\n        format = currentFormat;\n      }\n\n      switch (format) {\n        case 'hex':\n          colorValue.value = hex;\n          break;\n        case 'rgb':\n          colorValue.value = RGBAToStr(currentColor);\n          break;\n        case 'hsl':\n          colorValue.value = HSLAToStr(HSVAtoHSLA(currentColor));\n          break;\n      }\n\n      // Select the current format in the format switcher\n      document.querySelector(\".clr-format [value=\\\"\" + format + \"\\\"]\").checked = true;\n    }\n\n    /**\r\n     * Set the hue when its slider is moved.\r\n     */\n    function setHue() {\n      const hue = hueSlider.value * 1;\n      const x = colorMarker.style.left.replace('px', '') * 1;\n      const y = colorMarker.style.top.replace('px', '') * 1;\n\n      picker.style.color = \"hsl(\" + hue + \", 100%, 50%)\";\n      hueMarker.style.left = hue / 360 * 100 + \"%\";\n\n      setColorAtPosition(x, y);\n    }\n\n    /**\r\n     * Set the alpha when its slider is moved.\r\n     */\n    function setAlpha() {\n      const alpha = alphaSlider.value / 100;\n\n      alphaMarker.style.left = alpha * 100 + \"%\";\n      updateColor({ a: alpha });\n      pickColor();\n    }\n\n    /**\r\n     * Convert HSVA to RGBA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function HSVAtoRGBA(hsva) {\n      const saturation = hsva.s / 100;\n      const value = hsva.v / 100;\n      let chroma = saturation * value;\n      let hueBy60 = hsva.h / 60;\n      let x = chroma * (1 - Math.abs(hueBy60 % 2 - 1));\n      let m = value - chroma;\n\n      chroma = chroma + m;\n      x = x + m;\n\n      const index = Math.floor(hueBy60) % 6;\n      const red = [chroma, x, m, m, x, chroma][index];\n      const green = [x, chroma, chroma, x, m, m][index];\n      const blue = [m, m, x, chroma, chroma, x][index];\n\n      return {\n        r: Math.round(red * 255),\n        g: Math.round(green * 255),\n        b: Math.round(blue * 255),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert HSVA to HSLA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Hue, saturation, lightness and alpha values.\r\n     */\n    function HSVAtoHSLA(hsva) {\n      const value = hsva.v / 100;\n      const lightness = value * (1 - hsva.s / 100 / 2);\n      let saturation;\n\n      if (lightness > 0 && lightness < 1) {\n        saturation = Math.round((value - lightness) / Math.min(lightness, 1 - lightness) * 100);\n      }\n\n      return {\n        h: hsva.h,\n        s: saturation || 0,\n        l: Math.round(lightness * 100),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert RGBA to HSVA.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {object} Hue, saturation, value and alpha values.\r\n     */\n    function RGBAtoHSVA(rgba) {\n      const red = rgba.r / 255;\n      const green = rgba.g / 255;\n      const blue = rgba.b / 255;\n      const xmax = Math.max(red, green, blue);\n      const xmin = Math.min(red, green, blue);\n      const chroma = xmax - xmin;\n      const value = xmax;\n      let hue = 0;\n      let saturation = 0;\n\n      if (chroma) {\n        if (xmax === red) {hue = (green - blue) / chroma;}\n        if (xmax === green) {hue = 2 + (blue - red) / chroma;}\n        if (xmax === blue) {hue = 4 + (red - green) / chroma;}\n        if (xmax) {saturation = chroma / xmax;}\n      }\n\n      hue = Math.floor(hue * 60);\n\n      return {\n        h: hue < 0 ? hue + 360 : hue,\n        s: Math.round(saturation * 100),\n        v: Math.round(value * 100),\n        a: rgba.a\n      };\n    }\n\n    /**\r\n     * Parse a string to RGBA.\r\n     * @param {string} str String representing a color.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function strToRGBA(str) {\n      const regex = /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i;\n      let match, rgba;\n\n      // Default to black for invalid color strings\n      ctx.fillStyle = '#000';\n\n      // Use canvas to convert the string to a valid color string\n      ctx.fillStyle = str;\n      match = regex.exec(ctx.fillStyle);\n\n      if (match) {\n        rgba = {\n          r: match[3] * 1,\n          g: match[4] * 1,\n          b: match[5] * 1,\n          a: match[6] * 1\n        };\n\n      } else {\n        match = ctx.fillStyle.replace('#', '').match(/.{2}/g).map((h) => parseInt(h, 16));\n        rgba = {\n          r: match[0],\n          g: match[1],\n          b: match[2],\n          a: 1\n        };\n      }\n\n      return rgba;\n    }\n\n    /**\r\n     * Convert RGBA to Hex.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} Hex color string.\r\n     */\n    function RGBAToHex(rgba) {\n      let R = rgba.r.toString(16);\n      let G = rgba.g.toString(16);\n      let B = rgba.b.toString(16);\n      let A = '';\n\n      if (rgba.r < 16) {\n        R = '0' + R;\n      }\n\n      if (rgba.g < 16) {\n        G = '0' + G;\n      }\n\n      if (rgba.b < 16) {\n        B = '0' + B;\n      }\n\n      if (settings.alpha && (rgba.a < 1 || settings.forceAlpha)) {\n        const alpha = rgba.a * 255 | 0;\n        A = alpha.toString(16);\n\n        if (alpha < 16) {\n          A = '0' + A;\n        }\n      }\n\n      return '#' + R + G + B + A;\n    }\n\n    /**\r\n     * Convert RGBA values to a CSS rgb/rgba string.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function RGBAToStr(rgba) {\n      if (!settings.alpha || rgba.a === 1 && !settings.forceAlpha) {\n        return \"rgb(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \")\";\n      } else {\n        return \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n      }\n    }\n\n    /**\r\n     * Convert HSLA values to a CSS hsl/hsla string.\r\n     * @param {object} hsla Hue, saturation, lightness and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function HSLAToStr(hsla) {\n      if (!settings.alpha || hsla.a === 1 && !settings.forceAlpha) {\n        return \"hsl(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%)\";\n      } else {\n        return \"hsla(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%, \" + hsla.a + \")\";\n      }\n    }\n\n    /**\r\n     * Init the color picker.\r\n     */\n    function init() {\n      if (document.getElementById('clr-picker')) return; //** DO NOT REMOVE: Prevent binding events multiple times\n      // Render the UI\n      container = undefined;\n      picker = document.createElement('div');\n      picker.setAttribute('id', 'clr-picker');\n      picker.className = 'clr-picker';\n      picker.innerHTML =\n      \"<input id=\\\"clr-color-value\\\" name=\\\"clr-color-value\\\" class=\\\"clr-color\\\" type=\\\"text\\\" value=\\\"\\\" spellcheck=\\\"false\\\" aria-label=\\\"\" + settings.a11y.input + \"\\\">\" + (\"<div id=\\\"clr-color-area\\\" class=\\\"clr-gradient\\\" role=\\\"application\\\" aria-label=\\\"\" +\n      settings.a11y.instruction + \"\\\">\") +\n      '<div id=\"clr-color-marker\" class=\"clr-marker\" tabindex=\"0\"></div>' +\n      '</div>' +\n      '<div class=\"clr-hue\">' + (\"<input id=\\\"clr-hue-slider\\\" name=\\\"clr-hue-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.hueSlider + \"\\\">\") +\n      '<div id=\"clr-hue-marker\"></div>' +\n      '</div>' +\n      '<div class=\"clr-alpha\">' + (\"<input id=\\\"clr-alpha-slider\\\" name=\\\"clr-alpha-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.alphaSlider + \"\\\">\") +\n      '<div id=\"clr-alpha-marker\"></div>' +\n      '<span></span>' +\n      '</div>' +\n      '<div id=\"clr-format\" class=\"clr-format\">' +\n      '<fieldset class=\"clr-segmented\">' + (\"<legend>\" +\n      settings.a11y.format + \"</legend>\") +\n      '<input id=\"clr-f1\" type=\"radio\" name=\"clr-format\" value=\"hex\">' +\n      '<label for=\"clr-f1\">Hex</label>' +\n      '<input id=\"clr-f2\" type=\"radio\" name=\"clr-format\" value=\"rgb\">' +\n      '<label for=\"clr-f2\">RGB</label>' +\n      '<input id=\"clr-f3\" type=\"radio\" name=\"clr-format\" value=\"hsl\">' +\n      '<label for=\"clr-f3\">HSL</label>' +\n      '<span></span>' +\n      '</fieldset>' +\n      '</div>' +\n      '<div id=\"clr-swatches\" class=\"clr-swatches\"></div>' + (\"<button type=\\\"button\\\" id=\\\"clr-clear\\\" class=\\\"clr-clear\\\" aria-label=\\\"\" +\n      settings.a11y.clear + \"\\\">\" + settings.clearLabel + \"</button>\") +\n      '<div id=\"clr-color-preview\" class=\"clr-preview\">' + (\"<button type=\\\"button\\\" id=\\\"clr-close\\\" class=\\\"clr-close\\\" aria-label=\\\"\" +\n      settings.a11y.close + \"\\\">\" + settings.closeLabel + \"</button>\") +\n      '</div>' + (\"<span id=\\\"clr-open-label\\\" hidden>\" +\n      settings.a11y.open + \"</span>\") + (\"<span id=\\\"clr-swatch-label\\\" hidden>\" +\n      settings.a11y.swatch + \"</span>\");\n\n      // Append the color picker to the DOM\n      document.body.appendChild(picker);\n\n      // Reference the UI elements\n      colorArea = getEl('clr-color-area');\n      colorMarker = getEl('clr-color-marker');\n      clearButton = getEl('clr-clear');\n      closeButton = getEl('clr-close');\n      colorPreview = getEl('clr-color-preview');\n      colorValue = getEl('clr-color-value');\n      hueSlider = getEl('clr-hue-slider');\n      hueMarker = getEl('clr-hue-marker');\n      alphaSlider = getEl('clr-alpha-slider');\n      alphaMarker = getEl('clr-alpha-marker');\n\n      // Bind the picker to the default selector\n      bindFields(settings.el);\n      wrapFields(settings.el);\n\n      addListener(picker, 'mousedown', (event) => {\n        picker.classList.remove('clr-keyboard-nav');\n        event.stopPropagation();\n      });\n\n      addListener(colorArea, 'mousedown', (event) => {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorArea, 'contextmenu', (event) => {\n        event.preventDefault();\n      });\n\n      addListener(colorArea, 'touchstart', (event) => {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorMarker, 'mousedown', (event) => {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorMarker, 'touchstart', (event) => {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorValue, 'change', (event) => {\n        const value = colorValue.value;\n\n        if (currentEl || settings.inline) {\n          const color = value === '' ? value : setColorFromStr(value);\n          pickColor(color);\n        }\n      });\n\n      addListener(clearButton, 'click', (event) => {\n        pickColor('');\n        closePicker();\n      });\n\n      addListener(closeButton, 'click', (event) => {\n        pickColor();\n        closePicker();\n      });\n\n      addListener(getEl('clr-format'), 'click', '.clr-format input', (event) => {\n        currentFormat = event.target.value;\n        updateColor();\n        pickColor();\n      });\n\n      addListener(picker, 'click', '.clr-swatches button', (event) => {\n        setColorFromStr(event.target.textContent);\n        pickColor();\n\n        if (settings.swatchesOnly) {\n          closePicker();\n        }\n      });\n\n      addListener(document, 'mouseup', (event) => {\n        document.removeEventListener('mousemove', moveMarker);\n      });\n\n      addListener(document, 'touchend', (event) => {\n        document.removeEventListener('touchmove', moveMarker);\n      });\n\n      addListener(document, 'mousedown', (event) => {\n        keyboardNav = false;\n        picker.classList.remove('clr-keyboard-nav');\n        closePicker();\n      });\n\n      addListener(document, 'keydown', (event) => {\n        const key = event.key;\n        const target = event.target;\n        const shiftKey = event.shiftKey;\n        const navKeys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n        if (key === 'Escape') {\n          closePicker(true);\n\n          // Display focus rings when using the keyboard\n        } else if (navKeys.includes(key)) {\n          keyboardNav = true;\n          picker.classList.add('clr-keyboard-nav');\n        }\n\n        // Trap the focus within the color picker while it's open\n        if (key === 'Tab' && target.matches('.clr-picker *')) {\n          const focusables = getFocusableElements();\n          const firstFocusable = focusables.shift();\n          const lastFocusable = focusables.pop();\n\n          if (shiftKey && target === firstFocusable) {\n            lastFocusable.focus();\n            event.preventDefault();\n          } else if (!shiftKey && target === lastFocusable) {\n            firstFocusable.focus();\n            event.preventDefault();\n          }\n        }\n      });\n\n      addListener(document, 'click', '.clr-field button', (event) => {\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Open the color picker\n        event.target.nextElementSibling.dispatchEvent(new Event('click', { bubbles: true }));\n      });\n\n      addListener(colorMarker, 'keydown', (event) => {\n        const movements = {\n          ArrowUp: [0, -1],\n          ArrowDown: [0, 1],\n          ArrowLeft: [-1, 0],\n          ArrowRight: [1, 0]\n        };\n\n        if (Object.keys(movements).includes(event.key)) {\n          moveMarkerOnKeydown(...movements[event.key]);\n          event.preventDefault();\n        }\n      });\n\n      addListener(colorArea, 'click', moveMarker);\n      addListener(hueSlider, 'input', setHue);\n      addListener(alphaSlider, 'input', setAlpha);\n    }\n\n    /**\r\n     * Return a list of focusable elements within the color picker.\r\n     * @return {array} The list of focusable DOM elemnts.\r\n     */\n    function getFocusableElements() {\n      const controls = Array.from(picker.querySelectorAll('input, button'));\n      const focusables = controls.filter((node) => !!node.offsetWidth);\n\n      return focusables;\n    }\n\n    /**\r\n     * Shortcut for getElementById to optimize the minified JS.\r\n     * @param {string} id The element id.\r\n     * @return {object} The DOM element with the provided id.\r\n     */\n    function getEl(id) {\n      return document.getElementById(id);\n    }\n\n    /**\r\n     * Shortcut for addEventListener to optimize the minified JS.\r\n     * @param {object} context The context to which the listener is attached.\r\n     * @param {string} type Event type.\r\n     * @param {(string|function)} selector Event target if delegation is used, event handler if not.\r\n     * @param {function} [fn] Event handler if delegation is used.\r\n     */\n    function addListener(context, type, selector, fn) {\n      const matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n      // Delegate event to the target of the selector\n      if (typeof selector === 'string') {\n        context.addEventListener(type, (event) => {\n          if (matches.call(event.target, selector)) {\n            fn.call(event.target, event);\n          }\n        });\n\n        // If the selector is not a string then it's a function\n        // in which case we need a regular event listener\n      } else {\n        fn = selector;\n        context.addEventListener(type, fn);\n      }\n    }\n\n    /**\r\n     * Call a function only when the DOM is ready.\r\n     * @param {function} fn The function to call.\r\n     * @param {array} [args] Arguments to pass to the function.\r\n     */\n    function DOMReady(fn, args) {\n      args = args !== undefined ? args : [];\n\n      if (document.readyState !== 'loading') {\n        fn(...args);\n      } else {\n        document.addEventListener('DOMContentLoaded', () => {\n          fn(...args);\n        });\n      }\n    }\n\n    // Polyfill for Nodelist.forEach\n    if (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n      NodeList.prototype.forEach = Array.prototype.forEach;\n    }\n\n    //*****************************************************\n    //******* NPM: Custom code starts here ****************\n    //*****************************************************\n\n    /**\r\n     * Copy the active color to the linked input field and set the color.\r\n     * @param {string} [color] Color value to override the active color.\r\n     * @param {HTMLelement} [target] the element setting the color on\r\n     */\n    function setColor(color, target) {\n      currentEl = target;\n      oldColor = currentEl.value;\n      attachVirtualInstance(target);\n      currentFormat = getColorFormatFromStr(color);\n      updatePickerPosition();\n      setColorFromStr(color);\n      pickColor();\n      if (oldColor !== color) {\n        currentEl.dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    }\n\n    // Expose the color picker to the global scope\n    const Coloris = (() => {\n      const methods = {\n        init: init,\n        set: configure,\n        wrap: wrapFields,\n        close: closePicker,\n        setInstance: setVirtualInstance,\n        setColor: setColor,\n        removeInstance: removeVirtualInstance,\n        updatePosition: updatePickerPosition,\n        ready: DOMReady\n      };\n\n      function Coloris(options) {\n        DOMReady(() => {\n          if (options) {\n            if (typeof options === 'string') {\n              bindFields(options);\n            } else {\n              configure(options);\n            }\n          }\n        });\n      }\n\n      for (const key in methods) {\n        Coloris[key] = function () {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}\n          DOMReady(methods[key], args);\n        };\n      }\n\n      // handle window resize events re-aligning the panel\n      DOMReady(() => {\n        window.addEventListener('resize', (event) => {Coloris.updatePosition();});\n        window.addEventListener('scroll', (event) => {Coloris.updatePosition();});\n      });\n\n      return Coloris;\n    })();\n\n    // Ensure init function is available not only as as a default import\n    Coloris.coloris = Coloris;\n\n    // Init the color picker when the DOM is ready\n    return Coloris;\n\n  })(window, document, Math);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@melloware/coloris/dist/umd/coloris.js\n"));

/***/ })

});